generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  provider     Provider
  addedStreams Stream[] @relation("addedBy")
  streams      Stream[] @relation("user")
  upvotes      Upvote[]
}

model Stream {
  id            String         @id @default(uuid())
  type          StreamType
  url           String
  extractedId   String
  title         String         @default("")
  smallImg      String         @default("")
  bigImg        String         @default("")
  active        Boolean        @default(true)
  played        Boolean        @default(false)
  playedTs      DateTime?
  createAt      DateTime       @default(now())
  userId        String
  addedBy       String
  currentStream CurrentStream?
  addedByUser   User           @relation("addedBy", fields: [addedBy], references: [id])
  user          User           @relation("user", fields: [userId], references: [id])
  upvotes       Upvote[]
}

model CurrentStream {
  userId   String  @id
  streamId String? @unique
  stream   Stream? @relation(fields: [streamId], references: [id])
}

model Upvote {
  id       String @id @default(uuid())
  userId   String
  streamId String
  stream   Stream @relation(fields: [streamId], references: [id], onDelete: Cascade)
  user     User   @relation(fields: [userId], references: [id])

  @@unique([userId, streamId])
}

enum StreamType {
  Spotify
  Youtube
}

enum Provider {
  Google
}
